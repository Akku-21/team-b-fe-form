/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
    "/api/validate/{uuid}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Validate a UUID
         * @description Checks if a UUID is valid, not expired, and not resolved
         */
        get: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    uuid: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description UUID is valid */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            valid?: boolean;
                            jsonSchema?: Record<string, never>;
                        };
                    };
                };
                /** @description UUID is invalid, expired, or already resolved */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            valid?: boolean;
                            message?: string;
                        };
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/create": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * Create a new UUID entry
         * @description Creates a new UUID entry with a JSON schema and expiration
         */
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": {
                        /** Format: uuid */
                        uuid?: string;
                        jsonSchema?: Record<string, never>;
                        /** Format: date-time */
                        expiresAt?: string;
                    };
                };
            };
            responses: {
                /** @description UUID entry created successfully */
                201: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            message?: string;
                            uuid?: string;
                        };
                    };
                };
                /** @description Error creating UUID entry */
                500: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            error?: string;
                            details?: string;
                        };
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
}
export type webhooks = Record<string, never>;
export interface components {
    schemas: never;
    responses: never;
    parameters: never;
    requestBodies: never;
    headers: never;
    pathItems: never;
}
export type $defs = Record<string, never>;
export type operations = Record<string, never>;
